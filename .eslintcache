[{"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\index.js":"1","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\pages\\Home.js":"2","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\leverageAPI\\Api.js":"3","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\App.js":"4","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Slideshow.js":"5","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Genrelist.js":"6","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Trending.js":"7","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Top_rated_movies.js":"8","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Footer.js":"9","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\pages\\MovieDetails.js":"10"},{"size":334,"mtime":1610488635347,"results":"11","hashOfConfig":"12"},{"size":251,"mtime":1610656873720,"results":"13","hashOfConfig":"12"},{"size":3427,"mtime":1610977747899,"results":"14","hashOfConfig":"12"},{"size":430,"mtime":1610490849740,"results":"15","hashOfConfig":"12"},{"size":1564,"mtime":1610719049085,"results":"16","hashOfConfig":"12"},{"size":3461,"mtime":1610974577015,"results":"17","hashOfConfig":"12"},{"size":1390,"mtime":1610902756507,"results":"18","hashOfConfig":"12"},{"size":2517,"mtime":1610975960315,"results":"19","hashOfConfig":"12"},{"size":3410,"mtime":1610970809527,"results":"20","hashOfConfig":"12"},{"size":487,"mtime":1610992847647,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16sn0vo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\index.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\pages\\Home.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\leverageAPI\\Api.js",["43"],"import axios from 'axios';\r\nconst apiKey=process.env.REACT_APP_API_KEY;\r\nconst baseUrl='https://api.themoviedb.org/3';\r\nconst nowPlaying=`${baseUrl}/movie/now_playing`;\r\nconst genreList=`${baseUrl}/genre/movie/list`;\r\nconst discoverMovie=`${baseUrl}/discover/movie`;\r\nconst trendingPerson=`${baseUrl}/trending/person/week`;\r\nconst topRatedMovies=`${baseUrl}/movie/top_rated`;\r\nconst movies=`${baseUrl}/movie`;\r\n\r\nexport const fetchNowPlaying=async()=>{\r\n const {data}= await axios.get(nowPlaying,{\r\n     params:{\r\n          api_key:apiKey\r\n     }\r\n })\r\n const posterUrl='https://image.tmdb.org/t/p/original/';\r\n const modifiedData=data['results'].map((m)=>({\r\n     id : m['id'],\r\n     backPoster : posterUrl + m['backdrop_path'],\r\n     popularity : m['popularith'],\r\n     title:m['title'],\r\n     poster:posterUrl+m['poster_path'],\r\n     overview:m['overview'],\r\n     rating:m['vote_average']\r\n\r\n }))\r\n return modifiedData;\r\n}\r\n\r\nexport const fetchGenreList=async()=>{\r\n    const {data}=await axios.get(genreList,{\r\n        params:{\r\n            api_key:apiKey\r\n        }\r\n    })\r\n const modifiedData=data['genres'].map((m)=>({\r\n     id:m['id'],\r\n     name:m['name']\r\n }))\r\n return modifiedData; \r\n\r\n}\r\n\r\nexport const fetchDiscoverMovie=async(genre_id)=>{\r\n    const {data}=await axios.get(discoverMovie,{\r\n        params:{\r\n            api_key:apiKey,\r\n            page:1,\r\n            with_genres:genre_id\r\n        }\r\n    })\r\n    const posterUrl='https://image.tmdb.org/t/p/original/';\r\n    const modifiedData=data['results'].map((m)=>({\r\n        id : m['id'],\r\n        backPoster : posterUrl + m['backdrop_path'],\r\n        popularity : m['popularith'],\r\n        title:m['title'],\r\n        poster:posterUrl+m['poster_path'],\r\n        overview:m['overview'],\r\n        rating:m['vote_average']\r\n   \r\n    }))\r\n    return modifiedData;\r\n\r\n}\r\n\r\nexport const fetchTrendingPerson=async()=>{\r\n    const {data}=await axios.get(trendingPerson,{\r\n        params:{\r\n            api_key:apiKey\r\n        }\r\n    })\r\n const modifiedData=data['results'].map((m)=>({\r\n     id:m['id'],\r\n     popularity:m['popularity'],\r\n     name:m['name'],\r\n     profileImg:'https://image.tmdb.org/t/p/w200'+m['profile_path'],\r\n     known:m['known_for_department']\r\n }))\r\n return modifiedData; \r\n\r\n}  \r\n\r\nexport const fetchTopRatedMovies=async()=>{\r\n    const {data}=await axios.get(topRatedMovies,{\r\n        params:{\r\n            api_key:apiKey,\r\n        }\r\n    })\r\n    const posterUrl='https://image.tmdb.org/t/p/original/';\r\n    const modifiedData=data['results'].map((m)=>({\r\n        id : m['id'],\r\n        backPoster : posterUrl + m['backdrop_path'],\r\n        popularity : m['popularith'],\r\n        title:m['title'],\r\n        poster:posterUrl+m['poster_path'],\r\n        overview:m['overview'],\r\n        rating:m['vote_average']\r\n   \r\n    }))\r\n    return modifiedData;\r\n}\r\n\r\n\r\nexport const fetchMovies=async(movie_id)=>{\r\n    const {data}=await axios.get(`$movies/${movie_id}`,{\r\n        params:{\r\n            api_key:apiKey,\r\n        }\r\n    })\r\n    const posterUrl='https://image.tmdb.org/t/p/original/';\r\n    const modifiedData=data['results'].map((m)=>({\r\n        id : m['id'],\r\n        backPoster : posterUrl + m['backdrop_path'],\r\n        popularity : m['popularith'],\r\n        title:m['title'],\r\n        poster:posterUrl+m['poster_path'],\r\n        overview:m['overview'],\r\n        rating:m['vote_average']\r\n   \r\n    }))\r\n    return modifiedData;\r\n}\r\n","C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\App.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Slideshow.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Genrelist.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Trending.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Top_rated_movies.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\Footer.js",[],"C:\\Users\\NABZ\\Desktop\\projects\\react website\\TMDB\\movie-app\\src\\components\\pages\\MovieDetails.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":9,"column":7,"nodeType":"47","messageId":"48","endLine":9,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":17},"no-unused-vars","'movies' is assigned a value but never used.","Identifier","unusedVar","'movieInfo' is assigned a value but never used."]